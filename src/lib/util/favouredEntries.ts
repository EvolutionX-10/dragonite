import { AbilitiesEnum, ItemsEnum, MovesEnum, PokemonEnum } from '@favware/graphql-pokemon';

export const FavouredAbilities: FavouredEntry<AbilitiesEnum>[] = [
  {
    key: AbilitiesEnum.Multiscale,
    name: '‚≠ê Multiscale'
  },
  {
    key: AbilitiesEnum.Battlebond,
    name: '‚≠ê Battle Bond'
  },
  {
    key: AbilitiesEnum.Victorystar,
    name: '‚≠ê Victory Star'
  },
  {
    key: AbilitiesEnum.Primordialsea,
    name: '‚≠ê Primordial Sea'
  },
  {
    key: AbilitiesEnum.Powerconstruct,
    name: '‚≠ê Power Construct'
  },
  {
    key: AbilitiesEnum.Pixilate,
    name: '‚≠ê Pixilate'
  }
];

export const FavouredItems: FavouredEntry<ItemsEnum>[] = [
  {
    key: ItemsEnum.Lifeorb,
    name: '‚≠ê Life Orb'
  },
  {
    key: ItemsEnum.Choiceband,
    name: '‚≠ê Choice Band'
  },
  {
    key: ItemsEnum.Leftovers,
    name: '‚≠ê Leftovers'
  },
  {
    key: ItemsEnum.Ejectbutton,
    name: '‚≠ê Eject Button'
  },
  {
    key: ItemsEnum.Nevermeltice,
    name: '‚≠ê Never-Melt Ice'
  }
];

export const FavouredMoves: FavouredEntry<MovesEnum>[] = [
  {
    key: MovesEnum.Earthquake,
    name: '‚≠ê Earthquake'
  },
  {
    key: MovesEnum.Coreenforcer,
    name: '‚≠ê Core Enforcer'
  },
  {
    key: MovesEnum.Vcreate,
    name: '‚≠ê V-create'
  },
  {
    key: MovesEnum.Dragonascent,
    name: '‚≠ê Dragon Ascent'
  },
  {
    key: MovesEnum.Sparklingaria,
    name: '‚≠ê Sparkling Aria'
  },
  {
    key: MovesEnum.Pulverizingpancake,
    name: '‚≠ê Pulverizing Pancake (ü•û)'
  }
];

export const FavouredPokemon: FavouredEntry<PokemonEnum>[] = [
  {
    key: PokemonEnum.Dragonite,
    name: '‚≠ê Dragonite'
  },
  {
    key: PokemonEnum.Victini,
    name: '‚≠ê Victini'
  },
  {
    key: PokemonEnum.Greninjaash,
    name: '‚≠ê Ash Greninja'
  },
  {
    key: PokemonEnum.Mewtwo,
    name: '‚≠ê Mewtwo'
  },
  {
    key: PokemonEnum.Rayquaza,
    name: '‚≠ê Rayquaza'
  },
  {
    key: PokemonEnum.Arceus,
    name: '‚≠ê Arceus'
  },
  {
    key: PokemonEnum.Bidoof,
    name: '‚≠ê Bidoof (Peanut Butter)'
  }
];

export interface FavouredEntry<T> {
  key: T;
  name: `‚≠ê ${string}`;
}
